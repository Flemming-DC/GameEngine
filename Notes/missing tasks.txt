
diverse
	move openGL errorhandling into rendering folder thereby seperating it from general tools
	buy old used mac, linux, xbox and playstation
	update view-area on window resize
	evt. create the initializable class and let assets and components inhirit from it. 
	looping lacks in circle gizmo
	evt. cleanup unsued get so and so functions for the texture
	activate CollisionLoop::OnSceneEnd from a proper callback
	color is input to gizmo, but it is not used
	destroy gizmo if its associated transform goes nullptr
	error handling ved uninitialized material / mesh (the !UuidCreator::IsInitialized(id) check didn't catch missing setup call) 
	destruction and scene change at end of loop
	creating a collider Gizmo before the grid Gizmo causes the former to show up incorrectly. Possibly due to fitting objects of different size into the same vector
	input keyPressed and keyReleased bools and events.

components & gameobjects
	handle activation
	asset instances / prefabs (implement them by function calls that create an entity)
	uninitialized components for the sake of the gameLogic
	introduce ordering of start function. call it first on builtin components, then on others
	remove entity from register upon destruction.
	data dublication and leak in Entity::register_, scene.EntityIDs
	
	handle ids pointing to dead components
	remove entity from register on destroy
	scene activation and removing entities from register should be pushed until end of frame, otherwise you get and inconsistent update loop, which can destroy the things it is looping over.

dynamics
	enable, disable, startScene, endScene, starGame, endGame

Editor
	ctrl input for saving
	save changes automatically and/or on ctrl+s
	seperate core loop into editor vs game and evt. also seperate game-in-editor from game-in-build

	Inspector
	SceneEditor / Viewport
		run button width shortcut
		resize
		selection: single, box, evt. type
		move camera and objects by wasd/arrows and by mouse click+drag (without conflict)
		pause game in viewport
		save scene automatically
	GameView
		bring default window up in front of ImGUI and put in focus 
		run game on play and reload scene on stop
	AssetFolder
	Hierarchy
	
	viewport

collision
	use constrained proportions for circleCollider. this proporty is set on transform and used
	by circleCollider and Gizmo renderer
	edit colliders

	collision detection
		broad phase: boundingbox trees
	collision solving (aka. interaction)
	evt. drag & friction
	
	easy spawning for testing

	components
		rigidbody
	generate collision data
		normals, velocity, collisionPoint

run function / master loop
read/save files from/to disk
	Load function might make SetByInspector functions unnecessary
	comments in yml files for uuids
	component ordering
	load mesh and parent from id
	get entity by name
	hardcode custom gamelogic
	multiple scenes
	dont expose onconstructed, exppose a seperate function that is called after loading

headers
	common, tools, rendering
profiler

make 2d game






